1. def find_the_largest_number(int number_1, int number_2):
     if number_1>number_2:
      return number_1
     else:
       return number_2   

A=find_the_largest)number(5,-6)
print(A)
=> 5

2. def is_rectangle(int A, int B, int C, int D)
       if A ==B == C == D
          return 1
       else if  A== B &&  C== D
           return 1
       else if  A == D && C == B
           return 1
       else if A== C &&  B == D
           return 1
        else
           return 0


<usint qiskit>
import math
def is_rectangle(int  A, int B, int C, int D)
       q= QuantumRegister(3)
       c= ClassicalRegister(1)
       qc= QuantumCircuit(q,c)
       
        ga = math,acos(math.sqrt(C/float(C**2 + D**2)))
        fa = math.acos(math.sqrt(D/float(C**2+D**2)))
        qc.ry(2*ga, q[2])
        qc.ry(2*fa, q[1])
       
        qc.cx(q[0], q[1])
        qc.cx(q[1], q[2])
        qc.cx([q[0], q[2])

         qc.measure(q[2],q[0])

         simulator=Aer,get_backend('qasm_simulator')
         result=execute(qc, simulator, shots=1).result()
         counts = result.get_counts()
         if '1' in counts:
             return 1
         else 
             return 0
        


A = is_rectangle(5,6,6,5)
print(A)

“1”
